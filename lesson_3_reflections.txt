git remote add [shortname] [url] = creates new Git repository
git remote -v = view strings
git push origin master = push your master branch to git
git pull origin master = pull your master branch from git
git fetch = updates local copy of remote branch (origin/master), leaves local master alone (master) (good to compare changes or if there are conflicts)

When would you want to use a remote repository rather than keeping all your work local?
When working with a group of people on one code. You can all have access to the code to suggest changes, or work on your own individual parts.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
To avoid Git pulling when you're working on something and haven't committed/pushed it yet.

Describe the differences between forks, clones, and branches. When would you use one instead of the other?
Forks - for working on someone else's code from GitHub, so you can make all the changes you want and their's will remain the same.
Clones - for taking code from GitHub to be able to edit on your own computer.
Branches - for implementing experimental features and still being able to return to the master if you run into problems.

What is the benefit of having a copy of the last known state of the remote stored locally?
You can review changes you've made to it and also go back if you introduce a bug.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
You would have to share files either on the same computer, or via drop box. It would be harder to update things in the moment and you would not be able to view commits.

When would you want to make changes in a separate branch rather tahn directly in master? What benefits does each approach have?
Master is bascially the main code, so by making changes here you are truely updating your code. When making changes in a branch, you can test out different options and make sure things run smoothly before merging it and adding it to the master. It is also useful if you're working with a group, so you can compare changes and make sure a change you make doesn't impact someone else's change.
